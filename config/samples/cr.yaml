apiVersion: apps.cloudtruth.com/v1alpha1
kind: KubeTruth
metadata:
  name: kubetruth-sample
spec:
  # Default values copied from <project_dir>/helm-charts/kubetruth/values.yaml
  affinity: {}
  appSettings:
    apiKey: 832guQjd.nMpEZa2Xuvup2W2usCOtnGh83RUASFOZ
    apiUrl: null
    async: true
    debug: false
    pollingInterval: null
  autoscaling:
    enabled: false
    maxReplicas: 100
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  fullnameOverride: ""
  image:
    pullPolicy: Always
    repository: cloudtruth/kubetruth
    tag: "1.2.2-redhat.test.3"
  imagePullSecrets: []
  nameOverride: ""
  nodeSelector: {}
  podAnnotations: {}
  podSecurityContext: {}
  projectMappings:
    root:
      context:
        resource_name: '{{ project | dns_safe }}'
        resource_namespace: '{{ mapping_namespace }}'
        skip_secrets: false
      environment: default
      project_selector: ^(?!kubetruth)
      resource_templates:
        configmap: |
          {%- if parameters.size > 0 %}
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: "{{ context.resource_name }}"
            namespace: "{{ context.resource_namespace }}"
            labels:
              version: "{{ parameters | sort | to_json | sha256 | slice: 0, 7 }}"
            annotations:
              kubetruth/project_heirarchy: |
                {{ project_heirarchy | to_yaml | indent: 6 | lstrip }}
              kubetruth/parameter_origins: |
                {{ parameter_origins | to_yaml | indent: 6 | lstrip }}
          data:
            {%- for parameter in parameters %}
            {{ parameter[0] | key_safe | stringify }}: {{ parameter[1] | stringify }}
            {%- endfor %}
          {%- endif %}
        secret: |
          {%- unless context.skip_secrets or secrets.size == 0 %}
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ context.resource_name }}"
            namespace: "{{ context.resource_namespace }}"
            labels:
              version: "{{ secrets | sort | to_json | sha256 | slice: 0, 7 }}"
            annotations:
              kubetruth/project_heirarchy: |
                {{ project_heirarchy | to_yaml | indent: 6 | lstrip }}
              kubetruth/parameter_origins: |
                {{ secret_origins | to_yaml | indent: 6 | lstrip }}
          data:
            {%- for secret in secrets %}
            {{ secret[0] | key_safe | stringify }}: {{ secret[1] | encode64 | stringify }}
            {%- endfor %}
          {%- endunless %}
      scope: root
    webcontrol:
      project_selector: ^kubetruth$
      resource_templates:
        crds: |
          {%- for template in templates.names %}
  
          {%- assign is_raw_template = templates[template] | re_contains: "^\s*#\~\s*format:\s*raw" %}
          {%- if is_raw_template %}
  
          {{ templates[template] }}
  
          {%- else %}
  
          {%- assign name_parts = template | split: "/" %}
          {%- assign name = name_parts | last %}
  
          apiVersion: kubetruth.cloudtruth.com/v1
          kind: ProjectMapping
          metadata:
            name: "{{ name }}"
            {%- if name_parts.size > 1 %}
            namespace: "{{ name_parts | first }}"
            {%- endif %}
  
          spec: {{ templates[template] | nindent: 2 }}
  
          {%- endif %}
  
          {% unless forloop.last %}---{% endunless %}
          {%- endfor %}
      scope: override
      skip: true
      suppress_namespace_inheritance: true
  replicaCount: 1
  secret:
    create: true
    name: ""